package com.mikankui.hanasite.kakeibo.test.util;import com.mikankui.hanasite.kakeibo.exeption.IllegalDateException;import com.mikankui.hanasite.kakeibo.util.FormatUtil;import junit.framework.TestCase;public class CK_FormatUtil extends TestCase {	protected static void setUpBeforeClass() throws Exception {	}	protected static void tearDownAfterClass() throws Exception {	}	protected void setUp() throws Exception {		super.setUp();	}	protected void tearDown() throws Exception {		super.tearDown();	}		/**	 * 	 * 正常	 * Case 0001 "yyyy/MM/dd"="2013/09/09"、"HH:mm:ss"="06:50:59"の午前の時、"2013-09-09 06:50:59"を返す。	 * Case 0002 "yyyy/MM/dd"="2013/09/09"、"HH:mm:ss"="18:50:59"の午後の時、"2013-09-09 18:50:59"を返す。	 * @throws IllegalDateException 	 * 	 */	public void testParseDate_正常_午前() throws IllegalDateException {		//Case 0001		assertEquals(FormatUtil.parseDate("2013/09/09", "06:50:59"), "2013-09-09 06:50:59");	}	public void testParseDate_正常_午後() throws IllegalDateException {		//Case 0002		assertEquals(FormatUtil.parseDate("2013/09/09", "18:50:59"), "2013-09-09 18:50:59");	}		/**	 * 	 * 境界	 * Case 0001 "yyyy/MM/dd"の"yyyy"が0以下の場合、例外IllegalDateExceptionをスローする。<BR>	 * 	 */	public void testParseDate_境界_yyyyが0以下の場合()  {		try{			FormatUtil.parseDate("0/08/01", "12:23");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0002 "yyyy/MM/dd"の"yyyy"が10000以上の場合、例外IllegalDateExceptionをスローする。<BR> 	 */	public void testParseDate_境界_yyyyが10000以上の場合()  {		try{			FormatUtil.parseDate("10000/08/01", "12:23");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0003 "yyyy/MM/dd"の"MM"が0以下の場合、例外IllegalDateExceptionをスローする。<BR> 	 */	public void testParseDate_境界_MMが0以下の場合()  {		try{			FormatUtil.parseDate("2013/00/01", "12:23");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0004 "yyyy/MM/dd"の"MM"が13以上の場合、例外IllegalDateExceptionをスローする。<BR>	 * 	 */	public void testParseDate_境界_MMが13以上の場合()  {		//Case 0004		try{			FormatUtil.parseDate("2013/13/01", "12:23");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0005 "yyyy/MM/dd"の"dd"が0以下の場合、例外IllegalDateExceptionをスローする。<BR>	 * 	 */	public void testParseDate_境界_ddが0以下の場合()  {		try{			FormatUtil.parseDate("2013/08/00", "12:23");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0006 "yyyy/MM/dd"の"dd"が32以上の場合、例外IllegalDateExceptionをスローする。<BR>	 * 	 */	public void testParseDate_境界_ddが32以上の場合()  {		try{			FormatUtil.parseDate("2013/08/32", "12:23");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0007 "HH:mm:ss"の"HH"が0未満の場合、例外IllegalDateExceptionをスローする。<BR> 	 */	public void testParseDate_境界_HHが0未満の場合()  {		try{			FormatUtil.parseDate("2013/08/01", "-1:23");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0008 "HH:mm:ss"の"HH"が24以上の場合、例外IllegalDateExceptionをスローする。<BR>	 * 	 */	public void testParseDate_境界_HHが24以上の場合()  {		try{			FormatUtil.parseDate("2013/08/01", "24:23");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0009 "HH:mm:ss"の"mm"が0未満の場合、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_境界_mmが0未満の場合()  {		try{			FormatUtil.parseDate("2013/08/01", "12:-1");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0010 "HH:mm:ss"の"mm"が60以上の場合、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_境界_mmが60以上の場合() {		try{			FormatUtil.parseDate("2013/08/01", "12:60");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0011 "HH:mm:ss"の"ss"が0未満の場合、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_境界_ssが0未満の場合() {		try{			FormatUtil.parseDate("2013/08/01", "12:59:-1");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 	 * 境界	 * Case 0012 "HH:mm:ss"の"ss"が60以上の場合、例外IllegalDateExceptionをスローする。<BR> 	 */	public void testParseDate_境界_ssが60以上の場合() {		try{			FormatUtil.parseDate("2013/08/01", "12:59:99");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}		/**	 * 異常	 * Case 0001 "yyyy/MM/dd"がnullのとき、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_異常_yyyyMMddがnullのとき() {		try{			FormatUtil.parseDate(null, "12:59:10");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}	/**	 * 異常	 * Case 0001 "yyyy/MM/dd"がnullのとき、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_異常_yyyyMMddが空文字のとき() {		try{			FormatUtil.parseDate("", "12:59:10");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}	}	/**	 * 異常	 * Case 0003 "yyyy/MM/dd"が"yyyy"のとき、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_異常_yyyyMMddがyyyyのとき() {		try{			FormatUtil.parseDate("2013", "12:59:10");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}			}		/**	 * 異常	 * Case 0004 "yyyy/MM/dd"が"yyyy/MM"のとき、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_異常_yyyyMMddがyyyyMMのとき(){		try{			FormatUtil.parseDate("2013/08", "12:59:10");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}		}	/**	 * 異常	 * Case 0005 "HH:mm:ss"がnullのとき、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_異常_HHmmssがnullのとき() {		try{			FormatUtil.parseDate("2013/08/09", null);			fail();		}catch(IllegalDateException e){			assertTrue(true);		}		}	/**	 * 異常	 * Case 0006 "HH:mm:ss"が""のとき、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_異常_HHmmssが空文字のとき() {		try{			FormatUtil.parseDate("2013/08/09", "");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}		}	/**	 * 異常	 * Case 0007 "HH:mm:ss"が"HH"のとき、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_異常_HHmmssがHHのとき() {		try{			FormatUtil.parseDate("2013/08/09", "12");			fail();		}catch(IllegalDateException e){			assertTrue(true);		}		}	/**	 * 異常/正常	 * Case 0008 "HH:mm:ss"が"HH:mm"のとき、例外IllegalDateExceptionをスローする。<BR>	 */	public void testParseDate_異常正常_HHmmssがHHmmのとき() {		try{			assertEquals(FormatUtil.parseDate("2013/09/09", "18:50"), "2013-09-09 18:50:00");		}catch(IllegalDateException e){			assertTrue(true);		}		}}